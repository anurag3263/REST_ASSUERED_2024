name: Maven Test and email sender

on:
  workflow_dispatch:
    # Manually trigger the workflow

jobs:
  build:
    runs-on: ubuntu-latest  # Using Ubuntu environment for compatibility with xmlstarlet

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B test

      - name: Archive surefire test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: surefire-reports
          path: target/surefire-reports

      - name: Parse Surefire XML Reports
        id: parse_xml_reports
        run: |
          # Install xmlstarlet if not already available
          sudo apt-get update
          sudo apt-get install -y xmlstarlet

          # Initialize variables
          total_tests=0
          passed_tests=0
          failed_tests=0
          skipped_tests=0

          # Loop through all XML files and extract counts
          for file in target/surefire-reports/junitreports/TEST-*.xml; do
            total_tests=$((total_tests + $(xmlstarlet sel -t -v "count(//testsuite/testcase)" "$file")))
            passed_tests=$((passed_tests + $(xmlstarlet sel -t -v "count(//testsuite/testcase[@status='passed'])" "$file")))
            failed_tests=$((failed_tests + $(xmlstarlet sel -t -v "count(//testsuite/testcase[@status='failed'])" "$file")))
            skipped_tests=$((skipped_tests + $(xmlstarlet sel -t -v "count(//testsuite/testcase[@status='skipped'])" "$file")))
          done

          # Set outputs for downstream steps to use
          echo "::set-output name=totalTests::$total_tests"
          echo "::set-output name=passedTests::$passed_tests"
          echo "::set-output name=failedTests::$failed_tests"
          echo "::set-output name=skippedTests::$skipped_tests"

      - name: Test Summary
        id: test_summary
        uses: test-summary/action@v2
        with:
          paths: "target/surefire-reports/junitreports/TEST-*.xml"
        if: always()

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Send email
        uses: devellany/send-mail@v1.0.2
        with:
         host: smtp.google.com
         port: 465
         account: ${{secrets.MAIL_ADDRESS}}
         password: ${{secrets.MAIL_PASSWORD}}
         sender: anuragchaturvedi
         from: ${{secrets.MAIL_ADDRESS}}
         to: anuragchaturvedi0@gmail.com
         subject: anurag Api job run status.
         body: anurag sent email message
         contentType: text/html
         attachments: '[{"path":"src/test/resources/TestData/PutCall.json"}]'

  Email:
    runs-on: ubuntu-latest
    steps:
    - name: Send email with SMTP
      uses: peter-evans/sendmail-action@v2
      with:
        server_address: smtp.google.com
        server_port: 587
        username: ${{ secrets.MAIL_ADDRESS }}
        password: ${{ secrets.MAIL_PASSWORD }}
        from_address: ${{ secrets.MAIL_ADDRESS }}
        to_address: ${{ secrets.MAIL_ADDRESS }}
        subject: API Test run status
        body: |
          This is the email body.
        attachments: '["target/extent.html"]'

  notify-slack:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ always() }}  # Ensure this step runs after the previous job completes, regardless of its status
    steps:
      - name: Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          BUILD_STATUS: ${{ job.status }}
          TOTAL_TESTS: ${{ steps.parse_xml_reports.outputs.totalTests }}
          PASSED_TESTS: ${{ steps.parse_xml_reports.outputs.passedTests }}
          FAILED_TESTS: ${{ steps.parse_xml_reports.outputs.failedTests }}
          SKIPPED_TESTS: ${{ steps.parse_xml_reports.outputs.skippedTests }}
        run: |
          slack_message="Results are attached.\n\nBUILD_STATUS: $BUILD_STATUS\nTotal: $TOTAL_TESTS\nPassed: $PASSED_TESTS\nFailed: ${{ steps.parse_xml_reports.outputs.failedTests }}\nSkipped: $SKIPPED_TESTS.\n[View detailed report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Maven tests completed successfully. $slack_message\"}" "$SLACK_WEBHOOK_URL"

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Maven Test Results",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Maven Test Results*\nBUILD_STATUS: ${{ job.status }}\nTotal Tests: ${{ steps.parse_xml_reports.outputs.totalTests }}\nPassed Tests: ${{ steps.parse_xml_reports.outputs.passedTests }}\nFailed Tests: $FAILED_TESTS\nSkipped Tests: $SKIPPED_TESTS"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
