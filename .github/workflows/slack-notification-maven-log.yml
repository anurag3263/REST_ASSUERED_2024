# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Slack notification and Maven Status 

on:
  workflow_dispatch:
    # Manually trigger the workflow
    # inputs:
    #   environment:
    #     description: 'Environment to deploy to'
    #     required: true
    #     default: 'production'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven and capture test results
      id: build
      run: |
        mvn -B test | tee maven-output.log
        # Capture test results from Maven output
        totalTests = (Get-Content -Path maven-output.log | Select-String -Pattern 'Tests run: (\d+), Failures: (\d+), Errors: (\d+), Skipped: (\d+)' -AllMatches).Matches

    - name: Notify Slack with Test Results
      if: always()
      shell: pwsh
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
      run: |
        # Get test results from the previous step
        $totalTests = $env:totalTests

        # Extract counts from the match
        $totalTests = if ($totalTests.Success) { $totalTests.Groups[1].Value } else { '0' }
        $failedTests = if ($totalTests.Success) { $totalTests.Groups[2].Value } else { '0' }
