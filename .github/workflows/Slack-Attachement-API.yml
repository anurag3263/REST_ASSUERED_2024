# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Slack notification and Attachment

on:
  workflow_dispatch:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B test
      
    - name: Publish Test Report
      uses: actions/upload-artifact@v2
      with:
        name: surefire-reports
        path: target/surefire-reports

    - name: Test Summary
      id: test_summary
      uses: test-summary/action@v2
      with:
          paths: "target/surefire-reports/junitreports/TEST-*.xml"
      if: always()
        
    - name: Save test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: target/extent.html  # Adjust the path to your test result HTML files

    - name: Parse HTML report for test results
      id: parse-html
      run: |
        $totalTests = (Get-Content -Path target\extent.html -Raw | Select-String -Pattern '<tr ' -AllMatches).Matches.Count
        $passedTests = (Get-Content -Path target\extent.html -Raw | Select-String -Pattern 'class="passed"' -AllMatches).Matches.Count
        $failedTests = (Get-Content -Path target\extent.html -Raw | Select-String -Pattern 'class="failed"' -AllMatches).Matches.Count
        $errorTests = (Get-Content -Path target\extent.html -Raw | Select-String -Pattern 'class="error"' -AllMatches).Matches.Count
        $skippedTests = (Get-Content -Path target\extent.html -Raw | Select-String -Pattern 'class="skipped"' -AllMatches).Matches.Count

        # Calculate total tests (just in case any were missed by other counts)
        $totalTests = $passedTests + $failedTests + $errorTests + $skippedTests

        # Set outputs for later steps to use
        echo "::set-output name=totalTests::$totalTests"
        echo "::set-output name=passedTests::$passedTests"
        echo "::set-output name=failedTests::$failedTests"
        echo "::set-output name=errorTests::$errorTests"
        echo "::set-output name=skippedTests::$skippedTests"

    - name: Notify Slack with Test Results
      if: always()
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
      run: |
        $artifactsUrl = "https://github.com/$env:GITHUB_REPOSITORY/actions/runs/$env:GITHUB_RUN_ID"

        # Construct Slack message JSON
        $jsonBody = @{
          message = "API Tests have completed. Results are attached.`n`nTest Results`nTotal: ${{ steps.parse-html.outputs.totalTests }}, Passed: ${{ steps.parse-html.outputs.passedTests }}, Failed: ${{ steps.parse-html.outputs.failedTests }}, Errors: ${{ steps.parse-html.outputs.errorTests }}, Skipped: ${{ steps.parse-html.outputs.skippedTests }}.`n[View detailed report]($artifactsUrl)"
          channel = "github-action"
        } | ConvertTo-Json -Depth 20

        # Send JSON payload to Slack
        Invoke-RestMethod -Uri $env:SLACK_WEBHOOK -Method Post -Body $jsonBody -ContentType 'application/json'
